startTime,startTimeMillis,commit,commitMessage,buildTimeSeconds,criticalPathTimeSeconds,totalRunnerCount,internalRunnerCount,remoteRunnerCount,cacheHitCount,bytesSent,bytesRecv,annotation
2025-07-10T14:54:03.389Z,1752159243389,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",81.975,15.73,5756,1372,,4384,67603164,106003862,
2025-07-10T23:40:31.891Z,1752190831891,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",74.886,15.34,5756,1372,,4384,67193957,105924636,
2025-07-11T23:40:33.197Z,1752277233197,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",83.192,16.48,5756,1372,,4384,71856192,106129026,
2025-07-12T23:41:53.580Z,1752363713580,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",81.536,16.17,5756,1372,,4384,72194118,106137794,
2025-07-13T22:53:26.864Z,1752447206864,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",81.172,15.66,5756,1372,,4384,73058718,106361906,
2025-07-13T23:06:43.806Z,1752448003806,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",85.486,17.05,5756,1372,,4384,73049364,106340459,
2025-07-13T23:40:07.469Z,1752450007469,6146a88f60492b520a36f8f8f3231e15f3cc6082,"[LoongArch] Fix '-mno-lsx' option not disabling LASX feature (#143821)

When '-march' with LASX feature and '-mno-lsx' options are used
together, '-mno-lsx' fails to disable LASX, leaving
'HasFeatureLASX=true' and causing incorrect '__loongarch_sx/asx=1' macro
definition.

Fixes https://github.com/loongson-community/discussions/issues/95

(cherry picked from commit 2ecbfc0beb42abbbd2c3d28bfd576b38c44a5b46)
",92.37,18.22,5756,1372,,4384,73159662,106298384,
2025-07-14T23:38:26.144Z,1752536306144,d1db176e82fa02188471ca014582016b0b1ace7b,"ARM: Stop setting sincos_stret calling convention (#147457)

This was going out of its way to explicitly mark these as
ARM_AAPCS_VFP. This has been explicitly set since 8b40366b54bd4,
where the commit message states that sincos (not sincos_stret)
has a special calling convention. However, that commit also sets
the calling convention for all libcalls to ARM_AAPCS_VFP, and
getEffectiveCallingConv returns the same for CCC anyway in tests
using isWatchABI triples.

The net result of this appears to be a change in behavior when
using -float-abi=soft with isWatchABI, which have no tests so
I assume this is a theoretical combination.

If I assert

Only 2 tests fail the second condition, which look like copy paste
accidents
using v7k triples with linux and only needed a filler triple. This is a
consequence
of strangely using the target architecture in place of the OS ABI check,
as was done in 042a6c1fe19caf48af7e287dc8f6fd5fec158093",13007.477,1904.3,5894,1385,,111,3871266356,174956997,
2025-07-16T23:41:57.956Z,1752709317956,26b0b279deca7cd660efcae5c17bd27a15ead36d,[AMDGPU] Select flat GVS stores on gfx1250 (#149203)\n\n,6268.676,891.32,5890,1384,,123,3845570532,166395730,
