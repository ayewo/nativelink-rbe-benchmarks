name: Astro SSG Build and Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Performance Benchmarks"]
    types:
      - completed    
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: >- # v4.2.2
        actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      
    - name: Install pnpm
      uses: >- # v4.1.0
        pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda
      with:
        version: 9
      
    - name: Setup Node.js
      uses: >- # v4.4.0
        actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
      with:
        node-version: '20'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build
      run: |
        pnpm run build
        cp remote-caching.csv ./dist/data/
        cp remote-execution.csv ./dist/data/
      
    - name: Upload Pages artifact
      uses: >- # v3.0.1
        actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa
      with:
        path: ./dist

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-22.04
    
    permissions:
      pages: write
      id-token: write
      contents: read
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Check if GitHub Pages is enabled
      id: pages-check
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Checking if GitHub Pages is enabled for this repository..."

        pages_public=$(gh api repos/${{ github.repository }}/pages --jq '.public' 2>/dev/null || echo "")
        pages_status=$(gh api repos/${{ github.repository }}/pages --jq '.status' 2>/dev/null || echo "")
        
        echo "GitHub Pages public: $pages_public"
        echo "GitHub Pages status: $pages_status"
        
        if [ "$pages_public" = "true" ] && ([ "$pages_status" = "null" ] || [ "$pages_status" = "" ]); then
          echo "GitHub Pages is enabled and ready"
          echo "enabled=true" >> $GITHUB_OUTPUT
        elif [ "$pages_public" = "false" ] || echo "$pages_status" | grep -q "404"; then
          echo "GitHub Pages is not enabled for this repository"
          echo "Please enable GitHub Pages at: https://github.com/${{ github.repository }}/settings/pages"
          echo "enabled=false" >> $GITHUB_OUTPUT
        else
          echo "GitHub Pages status unclear. Public: $pages_public, Status: $pages_status"
          echo "Please check GitHub Pages settings at: https://github.com/${{ github.repository }}/settings/pages"
          echo "enabled=false" >> $GITHUB_OUTPUT
        fi        
        
    - name: Deploy to GitHub Pages
      id: deployment
      if: steps.pages-check.outputs.enabled == 'true'
      uses: >- # v4.0.5
        actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e
    - name: Deploy to GitHub Pages skipped
      if: steps.pages-check.outputs.enabled == 'false'
      run: |
        echo "⚠️ Deployment was skipped because GitHub Pages is not enabled."
        echo "To enable GitHub Pages, visit: https://github.com/${{ github.repository }}/settings/pages"
        echo "Once enabled, you can re-run this workflow to deploy."
